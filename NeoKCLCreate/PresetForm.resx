<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgpNS0pMSklMSklNS0pFQ0M6ODc9Ozo8
        OjkJCAgAAAAAAAAAAAAJCQlDQUA9Ozo6ODhCQD9NS0pMSklMSklGREMLCgoAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAALCwtbWVeYlpW3tbO4trS5t7W7ubecmpiVk5B8enpLSUgICAgAAAAJCQhMSkh9e3mVk5GX
        lZO5t7W6uLW4trS3tbOYlpVbWVcLCwoAAAAAAAAAAAAAAAAAAAAAAAAAAABUUlGkop+8urp+fXtkY2RW
        V1lZWFlkYmFlY2Gdm5mLiYZLSUcAAABGREOKiIedm5lnZWJhX11cWllbWVhnZWR/fXu8urmkop9bWVgA
        AAAAAAAAAAAAAAAAAAAAAAAAAABhX17T0c+HhYU2NzcAAAAAAABGRkpYVlZWVFNVU1JWVFNYVlVZVlVY
        VlVWVFNVU1JWVFNZV1ZPTUwAAAAAAAA8OjqHhYTU0s9hX14AAAAAAAAAAAAAAAAAAAAAAAAAAABnZWXh
        396BgH8TEQ96WCzhpl9iZGjz9Pbw8PHv7+/v7/Dv8PDv8PDv8PDv7/Dv7+/w8PH19fZsamgAAAAAAAAQ
        Dw+DgX/i4N1nZWQAAAAAAAAAAAAAAAAAAAAAAAAAAABra23q6OiWlpeRe2H0unb/0YmRhnl1dHNzcG5x
        b2xxb21xcHBvcHBxcHBxb21xb2xzcW53dXNmZGMAAAAAAABFQ0OZl5br6ehvbGwAAAAAAAAAAAAAAAAA
        AAAAAAAAAABkaG7NztDk5OWUlJZrbXFsbnJwb3Fxb26fnZzn5ubGx8mKgnn/4aR/e3fO0NHn5+aXlZRy
        cG91cnF1c3JzcXCgnp3m5eTJyMdta2oAAAAAAAAAAAAAAAAAAAAVDwihd0PbrHR4fIHJy87y8/Tz9PX0
        9PX09fX09PTz8/PKy82BgYDqxJf/15/sxph2en7Ky83z8/P09PT19fX19fX09PT08/TOzs6Fg4IQEBAA
        AAAAAAAAAAAAAAB/YDbdqWv/yIr/xobouIKQiYF4e4B4fIB5fIB5fIB4fIB4e3+IhobpwpX/0Zz90Z3/
        053rxZeRioN2eX13eX14en14en14e357fYF3eXsODg4AAAAAAAAAAABlSyrgrG74woX4w4b3wIP2wIL4
        wIH6wYD8wn78wX76wn36wH35wHv4vXj/4r36zZb5zZn4zZr6zpr90Zz/1J3/1Z3/1p7/1p7/2KD/1Zzf
        r3JbQSAAAAAAAAAAAAAAAAC9jU77xIf1wIP0v4DyvYDxvX/yvH/xvX7yvH7xvH3xu33wu3zwuXvtt3X7
        4MH1yZX1ypb2y5j2y5j4zJn5zpr6zpr7z5v80Jz80Z3+06D/2aa/jEkAAAAAAAAAAAAAAAC9jE32wYTx
        vX/wu37vu33vun3uunzuuXztuXvsuHvsuHrrt3rrt3josnP54cXzxpLzyJT0yZb1ypf1ypf2y5j2y5j3
        zJn4zZr4zZr6z5z/1qS9i0oAAAAAAAAAAAAAAAC9jU3zv4Hvun3tuXvsuHvsuHrrt3rrt3nqtnnqtnjp
        tXjptXfotXblsG/44snxxJDyx5Pyx5TzyJXzyJX0yZb1ypf1ypf2y5j2y5j4zZr+06K8i0oAAAAAAAAA
        AAAAAAC+jU7vu37suHnqtnnqtnjptXjptXfotXfntHbntHXms3Xms3XlsXPjrmv55c3vwo3wxZHwxZLx
        xpPyx5Tyx5TzyJXzyJX0yZb1ypf2y5j80aC9i0sAAAAAAAAAAAAAAAC+jU7tuXvptnjntHbntHXms3Xm
        s3XlsnTlsnPksXPksXPjsHLir2/gqmn559LswIruw4/vxJHvxJHwxZLwxZLxxpPyx5Tyx5TzyJX0yZb5
        z529i0sAAAAAAAAAAAAAAAC+jk7qt3nlsnXlsnPksXPksXPjsHLisHHir3Hhr3DhrnDgrm7grGzcp2T4
        6NbrvojswIztwo/two/uw5DvxJHvxJHwxZLwxZLxxpPzyJX3zZu9i0sAAAAAAAAAAAAAAAC/jk/ms3Xi
        sXHir3Hhr3DhrnDgrm/grm/frW7erW3eq2vcqWnbpmTZrnL37NvnxJfpu4brvorswI3swY7two/two/u
        w5DvxJHvxJHxxpP1ypm9jEsAAAAAAAAAAAAAAAC/jk/jsXLhr3DfrW7erW7erG3drG3dqmvbqmrbp2bZ
        pWPct4Pn27325cn+1abu7Nfm5dPoyZ7qu4bqvYnrv4vswY7swY7two/two/vxJH0yZi9jEwAAAAAAAAA
        AAAAAAC/jk/gr3Ddq2zcq2zcqmvbqWrbp2fYpmXXomHcu4vs5s/658j/1aL/z5j/zpf/zJT916rw7Nnm
        5dPmx53ouoXqvYnqvorrwI3swY7two/yx5W9jEwAAAAAAAAAAAAAAAC/jk/eq2zaqWrap2jYpmbXpGPW
        pmbexJnr4cf94r7svITXoF7SnVvZpGPgqmrnr3DxuXv9xYn91qnv69jn5dPmx53nuYTpvIjqvorrv4zw
        xZO+jEwAAAAAAAAAAAAAAAC/jk/bqmrZpmbXpGPYqm3fxprv58z737z/z5r/z5jCjUjLl1PTnVvapWPg
        q2rnsXLtt3n0vH7/zZb/ypL91qjx7dnn59Pmx53nuYTou4ftwpC+jEwAAAAAAAAAAAAAAAC/jU3apmXY
        qmzj0Kvz7df/3rb/z5j/z5n/z5n/0Zvbrnj60qn/2K/+0qT8y5j5xI33vn/3vn//0Zz/z5r/zpf/zJT+
        16rx7tno59ToyJ7rvoq9i0kAAAAAAAAAAAAAAADDllrn2Lb26M3/2q3ut3nXoF/SnVvZpGPgq2rosXHX
        r33+2bT/2K7+0qP9zJj7xo/3voDTnl/RnVvZpWPgqmrnr2/xuXv+xYn+1qjz7tnv7t3CllsAAAAAAAAA
        AAAAAAA4KRa1oID64MT/4rzCjUjLl1PSnVvZpGPgq2rosXLpuH/LmlzHmF3Hl1vHl1jHlVfCkE/RnFjS
        nVvZpGPgq2rnsHHtt3j1vH3/4Ln638LWt4toUDAAAAAAAAAAAAAAAAAAAAAAAAAGBAKJdVvdr3j60qr/
        2bL/1Kj9z537yZT5woj6wYP/1KD/1J//05//1J/br3n60qr/2rL/1Kj9z536yZT4woj6wYOlimdBLhcA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbsX3/4r7/2bL/1Kf+0J39y5X9x43VoWHRnVzapmTh
        q2vpsXLXsH3/27b/2rL/1aj/0J79y5b5xIrXomMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABPPyu3jFfMnWHUpWrUpGnLmVzDklHNmFbSnVvZpGPgq2rosXLpuH/Nm1/MnWLMm2DMml/Mml2w
        hExTPygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdFw7f
        snz60qr/2bL/1Kj9z537yZT6w4n9xIYsIhUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcsoD/4r//2bL/1Kf+0J79y5X9yI7ZpGQA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABQQCy3jFfMnWHUpWrUpGnLmV2xhExPOyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////////4AcAP8ACAB/AAgAfwwAGH8AABh/AAAYfwAAAHwAAAB4AAAA4AA
        AAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB+AA
        AB/4AAB/+AAAf//AD///4B///+Af/w==
</value>
  </data>
</root>